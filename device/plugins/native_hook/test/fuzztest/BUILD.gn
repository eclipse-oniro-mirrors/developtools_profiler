# Copyright (c) Huawei Technologies Co., Ltd. 2025. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/test.gni")
import("../../../../base/config.gni")

#####################common-config##########################################

hook_fuzz_cflags = [
  "-g",
  "-O0",
  "-Wno-unused-variable",
  "-fno-omit-frame-pointer",
  "-DFUZZ_TEST",
]

hook_fuzz_deps = [
  "${OHOS_PROFILER_DIR}/device/base:mock_test_source",
  "${OHOS_PROFILER_DIR}/device/plugins/native_daemon:native_daemon",
  "${OHOS_PROFILER_DIR}/device/plugins/native_hook:native_hook_source",
  "${OHOS_PROFILER_DIR}/protos/types/plugins/native_hook:native_hook_cpp",
  "${OHOS_PROFILER_DIR}/protos/types/plugins/native_hook:native_hook_cpp_standard",
]

hook_fuzz_external_deps = [
  "bounds_checking_function:libsec_shared",
  "cJSON:cjson",
  "c_utils:utils",
  "googletest:gtest",
  "hilog:libhilog_base",
  "init:libbegetutil",
  "protobuf:protobuf",
]

hook_fuzz_include_dirs = [
  "${OHOS_PROFILER_DIR}/device/plugins/native_hook/include",
  "${OHOS_PROFILER_DIR}/device/plugins/api/include",
  "${OHOS_PROFILER_DIR}/interfaces/kits",
  "${OHOS_PROFILER_DIR}/device/base/include",
]

###############################fuzztest####################################

# HookInitFuzzTest
ohos_fuzztest("HookInitFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  deps = hook_fuzz_deps
  external_deps = hook_fuzz_external_deps
  cflags = hook_fuzz_cflags
  include_dirs = hook_fuzz_include_dirs
  fuzz_config_file = "hookinit_fuzzer"
  sources = [ "hookinit_fuzzer/hookinit_fuzzer.cpp" ]
}

# HookMallocFuzzTest
ohos_fuzztest("HookMallocFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  deps = hook_fuzz_deps
  external_deps = hook_fuzz_external_deps
  cflags = hook_fuzz_cflags
  include_dirs = hook_fuzz_include_dirs
  fuzz_config_file = "hookmalloc_fuzzer"
  sources = [ "hookmalloc_fuzzer/hookmalloc_fuzzer.cpp" ]
}

# HookMiscDataFuzzTest
ohos_fuzztest("HookMiscDataFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  deps = hook_fuzz_deps
  external_deps = hook_fuzz_external_deps
  cflags = hook_fuzz_cflags
  include_dirs = hook_fuzz_include_dirs
  fuzz_config_file = "hookmiscdata_fuzzer"
  sources = [ "hookmiscdata_fuzzer/hookmiscdata_fuzzer.cpp" ]
}

# HookPrctlFuzzTest
ohos_fuzztest("HookPrctlFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  deps = hook_fuzz_deps
  external_deps = hook_fuzz_external_deps
  cflags = hook_fuzz_cflags
  include_dirs = hook_fuzz_include_dirs
  fuzz_config_file = "hookprctl_fuzzer"
  sources = [ "hookprctl_fuzzer/hookprctl_fuzzer.cpp" ]
}

# HookSetFuzzTest
ohos_fuzztest("HookSetFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  deps = hook_fuzz_deps
  external_deps = hook_fuzz_external_deps
  cflags = hook_fuzz_cflags
  include_dirs = hook_fuzz_include_dirs
  fuzz_config_file = "hookset_fuzzer"
  sources = [ "hookset_fuzzer/hookset_fuzzer.cpp" ]
}

###############################################################################

group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    ":HookInitFuzzTest",
    ":HookMallocFuzzTest",
    ":HookMiscDataFuzzTest",
    ":HookPrctlFuzzTest",
    ":HookSetFuzzTest",
  ]
}
###############################################################################
