# Copyright (c) Huawei Technologies Co., Ltd. 2023. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../base/config.gni")

config("ffrt_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${OHOS_PROFILER_DIR}/device/plugins/ffrt_profiler/service/include",
    "${OHOS_PROFILER_DIR}/device/services/ipc/include",
    "${OHOS_PROFILER_DIR}/device/services/shared_memory/include",
    "${OHOS_PROFILER_DIR}/interfaces/kits",
    "${OHOS_PROFILER_DIR}/device/plugins/api/include",
    "${OHOS_PROFILER_DIR}/device/base/include",
  ]
  defines = [
    "NO_PROTOBUF",
    "HAVE_HILOG",
  ]
}

ohos_shared_library("libffrt_profiler") {
  output_name = "libffrt_profiler"
  public_configs = [ ":ffrt_config" ]

  sources = [
    "src/ffrt_profiler.cpp",
    "src/ffrt_profiler_socker_client.cpp",
    "src/ffrt_profiler_write.cpp",
  ]

  sources += [
    "${OHOS_PROFILER_DIR}/device/base/src/epoll_event_poller.cpp",
    "${OHOS_PROFILER_DIR}/device/base/src/event_notifier.cpp",
    "${OHOS_PROFILER_DIR}/device/plugins/ffrt_profiler/service/src/ffrt_profiler_common.cpp",
    "${OHOS_PROFILER_DIR}/device/services/ipc/src/client_connection.cpp",
    "${OHOS_PROFILER_DIR}/device/services/ipc/src/service_entry.cpp",
    "${OHOS_PROFILER_DIR}/device/services/ipc/src/socket_context.cpp",
    "${OHOS_PROFILER_DIR}/device/services/ipc/src/unix_socket_client.cpp",
    "${OHOS_PROFILER_DIR}/device/services/ipc/src/unix_socket_server.cpp",
  ]

  deps = [
    "${OHOS_PROFILER_DIR}/device/services/shared_memory:shared_memory_lite",
  ]

  external_deps = [
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "init:libbegetutil",
  ]

  defines = []
  if (current_toolchain != host_toolchain) {
    external_deps += [ "hilog:libhilog_base" ]
  }

  install_images = [
    "system",
    "updater",
  ]

  innerapi_tags = [ "chipsetsdk" ]

  install_enable = true
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}
