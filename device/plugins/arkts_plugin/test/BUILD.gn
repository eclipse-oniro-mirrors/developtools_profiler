# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../base/config.gni")

module_output_path = "${OHOS_PROFILER_TEST_MODULE_OUTPUT_PATH}/device"
config("module_private_config") {
  visibility = [ ":*" ]
  if (current_toolchain != host_toolchain) {
    defines = [ "HAVE_HILOG" ]
  }
}

ohos_unittest("arktsplugin_ut") {
  module_out_path = module_output_path
  sources = [ "unittest/arkts_plugin_unittest.cpp" ]
  deps = [
    "${OHOS_PROFILER_DIR}/device/plugins/arkts_plugin:arkts_source",
    "${OHOS_PROFILER_DIR}/protos/services:common_types_lite_proto",
    "${OHOS_PROFILER_DIR}/protos/types/plugins/arkts_plugin:arkts_plugin_data_cpp",
  ]
  include_dirs = [
    "../include",
    "${OHOS_PROFILER_DIR}/interfaces/kits",
    "${OHOS_PROFILER_DIR}/device/base/include",
    "${OHOS_PROFILER_DIR}/device/plugins/api/include",
    "${OHOS_PROFILER_DIR}/device/services/profiler_service/src",
  ]
  cflags = [
    "-Wno-inconsistent-missing-override",
    "-Dprivate=public",  #allow test code access private members
  ]
  external_deps = [
    "bounds_checking_function:libsec_shared",
    "googletest:gtest",
    "hilog:libhilog",
    "openssl:libcrypto_shared",
    "protobuf:protobuf_lite",
  ]
  configs = [ ":module_private_config" ]
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
  resource_config_file = "${OHOS_PROFILER_DIR}/device/ohos_test.xml"
}

group("unittest") {
  testonly = true
  deps = [ ":arktsplugin_ut" ]
}
