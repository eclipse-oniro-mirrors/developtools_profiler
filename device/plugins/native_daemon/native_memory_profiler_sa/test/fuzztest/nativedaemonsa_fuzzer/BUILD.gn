# Copyright (c) Huawei Technologies Co., Ltd. 2024. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#####################hydra-fuzz###################
import("//build/test.gni")
import("../../../../../../base/config.gni")

##############################fuzztest##########################################
ohos_fuzztest("NativeDaemonSaFuzzTest") {
  module_out_path = hiprofiler_fuzz_output_path
  fuzz_config_file = "${OHOS_PROFILER_DIR}/device/plugins/native_daemon/native_memory_profiler_sa/test/fuzztest/nativedaemonsa_fuzzer"
  cflags = [
    "-g",
    "-O0",
    "-Wno-unused-variable",
    "-fno-omit-frame-pointer",
    "-DFUZZ_TEST",
  ]

  sources = [ "native_daemon_sa_fuzzer.cpp" ]

  deps = [
    "${OHOS_PROFILER_DIR}/device/base:hiprofiler_base",
    "${OHOS_PROFILER_DIR}/device/plugins/native_daemon:libnative_daemon_client",
    "${OHOS_PROFILER_DIR}/device/services/shared_memory:shared_memory_source",
    "${OHOS_PROFILER_DIR}/proto_encoder:proto_encoder_source",
    "${OHOS_PROFILER_DIR}/protos/services:plugin_service_proto",
    "${OHOS_PROFILER_DIR}/protos/services:profiler_service_all_type_source",
    "${OHOS_PROFILER_DIR}/protos/types/plugins/native_hook:native_hook_cpp",
    "${OHOS_PROFILER_DIR}/protos/types/plugins/native_hook:native_hook_cpp_standard",
  ]

  if (hiprofiler_use_libunwind) {
    deps += [ "//third_party/libunwind:unwind_source_${target_cpu}" ]
  }

  use_exceptions = true
  if (is_linux) {
    static_link = false
  }

  external_deps = [
    "ability_base:extractortool",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokensetproc_shared",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "googletest:gtest",
    "hilog:libhilog_base",
    "init:libbegetutil",
    "ipc:ipc_core",
    "openssl:libcrypto_shared",
    "protobuf:protobuf_lite",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "zlib:libz",
  ]

  if (hiprofiler_use_libunwinder) {
    external_deps += [ "faultloggerd:libunwinder" ]
  }
}

###############################################################################
group("fuzztest") {
  testonly = true
  deps = []
  deps += [
    # deps file
    ":NativeDaemonSaFuzzTest",
  ]
}
###############################################################################
