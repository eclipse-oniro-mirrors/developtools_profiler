# Copyright (c) Huawei Technologies Co., Ltd. 2021. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../base/config.gni")

module_output_path = "${OHOS_PROFILER_TEST_MODULE_OUTPUT_PATH}/device"
config("module_private_config") {
  visibility = [ ":*" ]
}

config("cflags_config") {
  cflags = [
    "-Wno-sign-compare",
    "-pthread",
    "-Dprivate=public",  #allow test code access private members
    "-Dprotected=public",  #allow test code access private members
  ]
}

ohos_unittest("hiprofiler_plugins_ut") {
  module_out_path = module_output_path
  deps = [
    "${OHOS_PROFILER_DIR}/device/services/plugin_service:hiprofiler_plugin_service",
    "${OHOS_PROFILER_DIR}/device/services/profiler_service:profiler_service",
    "${OHOS_PROFILER_DIR}/device/plugins/api:libhidebug",
    "../:plugins_sources",
  ]
  include_dirs = [ "${OHOS_PROFILER_DIR}/device/base/include" ]
  sources = [
    "unittest/buffer_write_test.cpp",
    "unittest/command_poller_test.cpp",
    "unittest/hidebug_base_test.cpp",
    "unittest/plugin_manager_test.cpp",
    "unittest/plugin_module_test.cpp",
    "unittest/writer_adapter_test.cpp",
  ]
  if (use_clang_coverage) {
    defines = [ "COVERAGE_TEST" ]
  }
  configs = [ ":cflags_config" ]
  external_deps = [
    "abseil-cpp:absl_cord",
    "abseil-cpp:absl_log",
    "abseil-cpp:absl_sync",
    "bounds_checking_function:libsec_shared",
    "c_utils:utils",
    "googletest:gmock",
    "googletest:gtest",
    "grpc:gpr",
    "grpc:grpc",
    "grpc:grpcxx",
    "hilog:libhilog_base",
    "init:libbegetutil",
    "openssl:libcrypto_shared",
    "protobuf:protobuf_lite",
  ]
  subsystem_name = "${OHOS_PROFILER_SUBSYS_NAME}"
  part_name = "${OHOS_PROFILER_PART_NAME}"
}

group("unittest") {
  testonly = true
  deps = [ ":hiprofiler_plugins_ut" ]
}
